import java.util.*;

public class Main{
    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        while(in.hasNext()){
            int n = in.nextInt();
            int m = in.nextInt();
            if(n < 0 || m < 0)continue;
            Queue<Integer> q = new PriorityQueue<>();
            for(int i = 0; i < n; i++){
                q.add(in.nextInt());
            }

            ArrayList<guest> guests = new ArrayList<>();
            for(int i = 0; i < m; i++){
                int person = in.nextInt();
                int cost = in.nextInt();
                guests.add(new guest(person, cost));
            }

            Comparator<guest> cmp = new Comparator<guest>() {
                @Override
                public int compare(guest o1, guest o2) {
                    if(o1.person > o2.person)return 1;
                    else if(o1.person < o2.person)return -1;
                    else{
                        if(o1.cost > o2.cost)return 1;
                        else if(o1.cost < o2.cost)return -1;
                    }
                    return 0;
                }
            };

            Collections.sort(guests, cmp);

            int total = 0;
            int last = 0;
            while(!q.isEmpty()){
                int table = q.poll();
                for(; last < guests.size(); last++) {
                    if (guests.get(last).person > table) {
                        last--;
                        break;
                    }
                }
                if(last >= guests.size())break;
                int tmp = last;
                while(tmp >= 0 && guests.get(tmp).flag)tmp--;
                total += tmp >= 0 ? guests.get(tmp).cost : 0;
                guests.get(tmp).flag = true;
            }

            System.out.println(total);
        }
    }
}

class guest{
    int person;
    int cost;
    boolean flag;

    guest(int p, int c){
        this.person = p;
        this.cost = c;
        flag = false;
    }
}
